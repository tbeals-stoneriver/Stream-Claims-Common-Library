<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
		http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-1.5.xsd">

	<!--  Accounts Payable Import -->	
	<batch:job id="AcctsPayableImp" restartable="true"  parent="baseJob">
		<batch:step id="acctsPayableImportStep" next="AcctsPayableImp_moveFiles">
			<batch:tasklet task-executor="multiThreadedTaskExecutor">
				<batch:chunk reader="paymentReconBatchReader"
					processor ="paymentReconBatchProcessor"
					writer="paymentReconBatchWriter" commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>					
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="stepExecutionListener" />
					<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:step id="AcctsPayableImp_moveFiles">
			<batch:tasklet ref="processedFilesTasklet" />
		</batch:step>		
	</batch:job>

	<bean id="paymentReconBatchProcessor"
				  class="com.client.iip.integration.batch.XMLFileResourceItemProcessor">
    	<property name="schemaFileName" value="xsd/DisbursementImport.xsd" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>	
    		</list>
    	</property>
	</bean>
	
	<bean id="paymentReconBatchReader" class="com.client.iip.integration.batch.SynchronizedResourceItemReader">
		<property name="resources" value="file:${APImportFolder}/*.xml" />
	</bean>
	
	<bean id="paymentReconBatchWriter"
		class="com.client.iip.integration.batch.PaymentReconBatchWriter">
	</bean>
	
	<!-- Order Return Batch -->		
	
	<batch:job id="ReceiveOrder" restartable="true" parent="baseJob">
		<batch:step id="OrderReturnStep" next="receiveOrder_moveFiles">
			<batch:tasklet task-executor="multiThreadedTaskExecutor">
				<batch:chunk reader="orderReturnBatchReader"
					processor ="orderReturnBatchProcessor"
					writer="orderReturnBatchWriter" commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>					
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="stepExecutionListener" />
					<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
		<batch:step id="receiveOrder_moveFiles">
			<batch:tasklet ref="processedFilesTasklet" />
		</batch:step>		
	</batch:job>
	
	<bean id="orderReturnBatchReader" class="com.client.iip.integration.batch.SynchronizedResourceItemReader">
		<property name="resources" value="file:${OrderReturnFolder}/*.xml" />
	</bean>
	
	<bean id="orderReturnBatchProcessor"
				  class="com.client.iip.integration.batch.XMLFileResourceItemProcessor">
    	<property name="schemaFileName" value="xsd/OrderReturn.xsd" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>	
    		</list>
    	</property>
	</bean>	
	
	<bean id="orderReturnBatchWriter"
		class="com.client.iip.integration.batch.OrderReturnBatchWriter">
	</bean>
	
	<!-- Claim Import Batch -->

	<batch:job id="ClaimImport" restartable="true" parent="baseJob">
		<batch:step id="claimImportStep" next="ClaimImport_moveFiles">
			<batch:tasklet>
				<batch:chunk reader="claimImportBatchReader"
				    processor ="claimImportBatchProcessor"
					writer="claimImportBatchWriter" commit-interval="1" />
				<batch:listeners>
					<batch:listener ref="stepExecutionListener" />
				</batch:listeners>				
			</batch:tasklet>
		</batch:step>
		<batch:step id="ClaimImport_moveFiles">
			<batch:tasklet ref="processedFilesTasklet" />
		</batch:step>		
	</batch:job>
	
	<bean id="claimImportBatchReader" class="com.client.iip.integration.batch.SynchronizedResourceItemReader">
		<property name="resources" value="file:${ClaimImportFolder}/*.xml" />
	</bean>
	
	<bean id="claimImportBatchProcessor"
				  class="com.client.iip.integration.batch.XMLFileResourceItemProcessor">
    	<property name="schemaFileName" value="xsd/ClaimImport.xsd" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>
				<value>properties/CIFN-alias-map</value>
    		</list>    		
    	</property>
	</bean>	
	
	<bean id="claimImportBatchWriter"
		class="com.client.iip.integration.batch.ClaimImportBatchWriter">
	</bean>
	
	<!--  Party Import Batch -->
	
	<batch:job id="PartyImport" restartable="true" parent="baseJob">
		<batch:step id="partyImportStep" next="PartyImport_moveFiles">
			<batch:tasklet task-executor="multiThreadedTaskExecutor">
				<batch:chunk reader="partyImportBatchReader"
					processor ="partyImportBatchProcessor"
					writer="partyImportBatchWriter" commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>					
				</batch:chunk>
				<batch:listeners>
					<batch:listener ref="stepExecutionListener" />
					<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>
				</batch:listeners>				
			</batch:tasklet>
		</batch:step>
		<batch:step id="PartyImport_moveFiles">
			<batch:tasklet ref="processedFilesTasklet" />
		</batch:step>
	</batch:job>
	
	<bean id="partyImportBatchReader" class="com.client.iip.integration.batch.SynchronizedResourceItemReader">
		<property name="resources" value="file:${PartyImportFolder}/*.xml" />
	</bean>
	
	<bean id="partyImportBatchProcessor"
				  class="com.client.iip.integration.batch.XMLFileResourceItemProcessor">
    	<property name="schemaFileName" value="xsd/Party.xsd" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>
    		</list>
    	</property>
	</bean>	
	
	<bean id="partyImportBatchWriter"
		class="com.client.iip.integration.batch.PartyImportBatchWriter">
	</bean>	
	
</beans>

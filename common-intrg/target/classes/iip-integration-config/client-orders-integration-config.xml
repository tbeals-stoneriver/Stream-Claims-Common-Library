<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:activiti="http://www.mulesoft.org/schema/mule/activiti-embedded"
	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.3/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.3/mule-http.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.3/mule-xml.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.3/mule.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.3/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/3.3/mule-jersey.xsd
http://www.mulesoft.org/schema/mule/activiti-embedded http://www.mulesoft.org/schema/mule/activiti-embedded/3.2/mule-activiti-embedded.xsd
">
		
	<vm:endpoint name="orderReturnBatchEndpoint" path="orderReturn.in"
		exchange-pattern="request-response" connector-ref="vmSync" />		

<activiti:connector name="ordersActivitiConnector"
		repositoryService-ref="repositoryService"
		runtimeService-ref="runtimeService"
		taskService-ref="taskService"
		historyService-ref="historyService" />
		

	<flow name="startProcess">
            <vm:inbound-endpoint name="bpm.process.start.endpoint" connector-ref="vmSync" path="bpm.process.start.in" exchange-pattern="request-response"/>
            <custom-transformer class="com.client.iip.integration.orders.OrdersOutboundTransformer"/>  
            <!-- <activiti:create-process parametersExpression="#[header:INBOUND:createProcessParameters]" connector-ref="ordersActivitiConnector" />--> 
            <vm:outbound-endpoint path="orders.reportRequest.in"
                        exchange-pattern="request-response" connector-ref="vmSync" />
      </flow>


    <flow name="sendOrder_Report">
              <vm:inbound-endpoint name="orders.send.report.endpoint" connector-ref="vmSync" path="orders.reportRequest.in" exchange-pattern="request-response"/>
              <!-- <logger message="Orders: Send Police Report Order Endpoint for Client. Payload: #[payload]" level="INFO"/> -->

        <outbound-endpoint
            name="orderReportEndpointHttp"
            address="${orderReportURL}"
            exchange-pattern="request-response"
            mimeType="text/xml"
            ref="OutBoundEnpointRef"
            transformer-refs="OrderRequestDateTransformer SecurityOutboundRequestTransformer IIPObject2XMLTransformer"
            responseTransformer-refs="ByteArrayToString SecurityOutboundResponseTransformer IIPXML2ObjectTransformer"
        />

    </flow>

	
	<flow name="receiveOrder_PoliceReport">
	
  		<vm:inbound-endpoint path="receiveOrder" exchange-pattern="request-response" connector-ref="vmSync" >

            <response>
                <custom-processor class="com.fiserv.isd.iip.core.routing.mule.ThreadCtxClearingProcessor"/>
            </response>

        </vm:inbound-endpoint>
        
        <custom-processor class="com.fiserv.isd.iip.core.routing.mule.TransactionStartingMessageProcessor"/>
        <custom-processor class="com.fiserv.isd.iip.core.routing.mule.ThreadCtxInitializingProcessor">
            <spring:property name="acceptConfirmations" value="true"/>
            <spring:property name="requestType" value="INTERFACE"/>
        </custom-processor>

		<message-properties-transformer>
			<add-message-property key="xsd" value="xsd/OrderReturn.xsd" />
			<add-message-property key="interface" value="ORDRESP"/>	
		</message-properties-transformer>

		<transformer ref="SecurityInboundRequestTransformer" />
		<transformer ref="XSDValidationTransformer" />
		<transformer ref="IIPXML2ObjectTransformer" />

		<vm:outbound-endpoint path="payloadRouter" exchange-pattern="request-response" connector-ref="vmSync" />
		
		 <!-- Route unexpected errors to separate error handler -->
        <default-exception-strategy>
            <vm:outbound-endpoint path="userErrorHandler" exchange-pattern="request-response" connector-ref="vmSync" />
        </default-exception-strategy> 
    </flow>
    
	<flow name="orderUpdateSubFlow" doc:name="Order Update Subflow">
	
		<vm:inbound-endpoint path="orderUpdate" exchange-pattern="request-response" connector-ref="vmSync" />
	
		<outbound-endpoint ref="orders.endpoint.ordersServiceEndPoint"
							transformer-refs="saveOrderReturnMethod"
            	           responseTransformer-refs="clientExceptionTransformer IIPObject2XMLTransformer" />
	</flow>
	
</mule>



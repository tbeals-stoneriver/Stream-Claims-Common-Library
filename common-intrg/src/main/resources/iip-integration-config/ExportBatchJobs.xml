<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
		
		
	<!-- AP Export Batch -->
	
	<batch:job id="AcctsPayableExp" restartable="true"  parent="baseJob">
		<batch:step id="acctsPayableExpStep">
			<batch:tasklet>
				<batch:chunk reader="batchExportReader" processor="paymentExportProcessor"
					writer="paymentExportWriter" commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>					
				</batch:chunk>			
			</batch:tasklet>
			<batch:listeners>
				<batch:listener ref="stepExecutionListener" />
				<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>
			</batch:listeners>			
		</batch:step>
	</batch:job>
	
	<bean id="batchExportReader" class="com.client.iip.integration.batch.BatchExportReader" />
	
   	<bean id="paymentExportProcessor" class="com.client.iip.integration.batch.PaymentExportProcessor" />
   	
	<bean id="paymentExportWriter" class="com.client.iip.integration.batch.XMLFileResourceItemWriter">
    	<property name="exportFolderPath" value="${APExportFolder}" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>
    		</list>
    	</property>    	
	</bean>	   	
   	
   	<!-- Vendor Export Batch -->
   	
	<batch:job id="VendorExport" restartable="true"  parent="baseJob">
		<batch:step id="vendorExportStep">
			<batch:tasklet>
				<batch:chunk reader="vendorExportReader" processor="vendorExportProcessor"
					writer="vendorExportWriter" commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>					
				</batch:chunk>
			</batch:tasklet>
			<batch:listeners>
				<batch:listener ref="stepExecutionListener" />
				<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>
			</batch:listeners>			
		</batch:step>
	</batch:job>
	
	<bean id="vendorExportReader" class="com.client.iip.integration.batch.VendorExportReader" />
	
	<bean id="vendorExportProcessor" class="com.client.iip.integration.batch.VendorExportProcessor" />

	
	<bean id="vendorExportWriter" class="com.client.iip.integration.batch.XMLFileResourceItemWriter">
    	<property name="exportFolderPath" value="${VendorExportFolder}" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>
    		</list>
    	</property>    	
	</bean>
	
	<!-- Claim Export -->
	
	<batch:job id="ClaimExport" restartable="true" parent="baseJob">
		<batch:step id="claimExportStep">
			<batch:tasklet>
				<batch:chunk reader="claimExportReader" processor="claimExportProcessor" 
					writer="claimExportWriter" commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
			<batch:listeners>
				<batch:listener ref="stepExecutionListener" />
				<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>
			</batch:listeners>
		</batch:step>
	</batch:job>

	<bean id="claimExportReader"
		class="com.fiserv.isd.iip.core.batch.reader.DataAccessCursorItemReader"
		p:lds-ref="claimsAllLogicalDataSource" p:accessId="client.claims.batch.claimExport">
		<property name="rowMapper">
			<bean class="com.fiserv.isd.iip.core.batch.reader.DataAccessRowMapper">
				<property name="dtoClass" value="com.stoneriver.iip.claims.search.ClaimSearchResultDTO" />
			</bean>
		</property>
	</bean>
	
	<bean id="claimExportProcessor" class="com.client.iip.integration.batch.ClaimExportProcessor" />

	
	<bean id="claimExportWriter" class="com.client.iip.integration.batch.XMLFileResourceItemWriter">
    	<property name="exportFolderPath" value="${ClaimExportFolder}" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>
    		</list>
    	</property>    	
	</bean>
	
	<!-- GL Export -->

	<batch:job id="glExport" restartable="true" parent="baseJob">
		<batch:step id="glExportStep">
			<batch:tasklet>
				<batch:chunk reader="batchExportReader" processor="glExportBatchProcessor"
					writer="glExportBatchWriter" 
						commit-interval="20" skip-limit="20">
					<batch:skippable-exception-classes merge="true">
						<batch:include class="java.lang.Exception"/>
					</batch:skippable-exception-classes>
					</batch:chunk>
				<batch:listeners>
					<batch:listener ref="stepExecutionListener" />
					<batch:listener ref="skipListener" on-skip-in-write-method="onSkipInWrite"/>				
				</batch:listeners>
			</batch:tasklet>
		</batch:step>
	</batch:job>
	
	<bean id="glExportBatchProcessor" class="com.client.iip.integration.batch.GeneralLedgerExportProcessor" />
	
	<bean id="glExportBatchWriter" class="com.client.iip.integration.batch.XMLFileResourceItemWriter">
    	<property name="exportFolderPath" value="${GLExportFolder}" />
    	<property name="aliasFileList">
    		<list>
    			<value>properties/client-mule-alias-map</value>
    		</list>
    	</property>    	
	</bean>
		
</beans>

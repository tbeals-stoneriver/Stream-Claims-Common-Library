<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core"
	xmlns:jersey="http://www.mulesoft.org/schema/mule/jersey" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

	xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.3/mule-vm.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.3/mule-http.xsd 
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/3.3/mule-xml.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.3/mule.xsd
http://www.mulesoft.org/schema/mule/jersey http://www.mulesoft.org/schema/mule/jersey/3.3/mule-jersey.xsd
">
	
	<!-- Transformer used for converting XML to Client specific format. -->
	<custom-transformer name="OutBoundDocumentXMLTransformer"
		class="com.client.iip.integration.documents.OutBoundDocumentXMLTransformer" />	
	
	<!-- Transformer used for transforming object  -->
	<custom-transformer name="OutBoundDocumentObjectTransformer"
		class="com.client.iip.integration.documents.OutBoundDocumentObjectTransformer" />	
	
	<flow name="Client Render Document">

		<vm:inbound-endpoint ref="document.system.endpoint.renderDocument" exchange-pattern="request-response" /> 

		<logger message="Render Document custom Client flow invoked"/> 		

        <outbound-endpoint
            name="renderDocumentEndpointHttp"
            address="${documentRenderURL}"
            exchange-pattern="request-response"
            mimeType="text/xml"
            ref="OutBoundEnpointRef"
            transformer-refs="OutBoundDocumentXMLTransformer SecurityOutboundRequestTransformer"
            responseTransformer-refs="ByteArrayToString"
        />

		<message-properties-transformer>
			<add-message-property key="xsd"
				value="xsd/DocumentResponse.xsd" />
		</message-properties-transformer>

		<transformer ref="SecurityOutboundResponseTransformer" /> 
		<transformer ref="XSDValidationTransformer" />
		<transformer ref="IIPXML2ObjectTransformer" />	
	</flow>
	
	<flow name="Preview Document">
		<inbound-endpoint ref="document.system.endpoint.previewDocument"></inbound-endpoint>
		<logger message="Preview Document flow invoked"/>
		<component>
			<method-entry-point-resolver><include-entry-point method="previewDocument"/></method-entry-point-resolver>
			<spring-object bean="document.pojo.AdobeOutputSystemClient"></spring-object>
		</component>
	</flow>
	
	<flow name="Deliver Document">

		<inbound-endpoint ref="document.system.endpoint.deliverDocument"></inbound-endpoint>		

		<logger message="Deliver Document custom Client flow invoked"/>

		<!-- This code was to save request payload to use attributes in response if Client will not be able 
		to send  DeliverDocumentResponse XML 
		<message-properties-transformer scope="invocation">
        	<add-message-property key="requestPayload" value="#[message:payload]"/>
        </message-properties-transformer>	
        -->	
        
        <outbound-endpoint
            name="deliverDocumentEndpointHttp"
            address="${documentDeliverURL}"
            exchange-pattern="request-response"
            mimeType="text/xml"
            ref="OutBoundEnpointRef"
            transformer-refs="OutBoundDocumentXMLTransformer SecurityOutboundRequestTransformer"
            responseTransformer-refs="ByteArrayToString"
        />

        <!--<property key="responseProperties" value="#[header:SESSION:requestPayload]" /> -->

		<message-properties-transformer>			
			<add-message-property key="xsd" value="xsd/DocumentDeliveryResponse.xsd" />
		</message-properties-transformer>
		<transformer ref="SecurityOutboundResponseTransformer" />
		<transformer ref="XSDValidationTransformer" />
		<transformer ref="IIPXML2ObjectTransformer" />
		<transformer ref="OutBoundDocumentObjectTransformer" />
	</flow>
	
	<flow name="Retrieve Printer List">
		<inbound-endpoint ref="document.system.endpoint.retrievePrinters"></inbound-endpoint>
		<logger message="Retrieve Document flow invoked"/>
		<component>
			<method-entry-point-resolver><include-entry-point method="retrieveAllPrinters"/></method-entry-point-resolver>
			<spring-object bean="document.pojo.AdobeOutputSystemClient"></spring-object>
		</component>
	</flow>
	
	<flow name="Edit Document">
                           
		<inbound-endpoint ref="document.system.endpoint.editDocument"></inbound-endpoint>
		<logger message="Client custom Edit Document flow invoked"/>

        <outbound-endpoint
            name="editDocumentEndpointHttp"
            address="${documentEditURL}"
            exchange-pattern="request-response"
            mimeType="text/xml"
            ref="OutBoundEnpointRef"
            transformer-refs="IIPObject2XMLTransformer OutBoundDocumentXMLTransformer SecurityOutboundRequestTransformer"
            responseTransformer-refs="ByteArrayToString"
        />

		<message-properties-transformer>			
			<add-message-property key="xsd" value="xsd/DocumentResponse.xsd" />
		</message-properties-transformer>
		
		<transformer ref="SecurityOutboundResponseTransformer" />
		<transformer ref="XSDValidationTransformer" />
		<transformer ref="IIPXML2ObjectTransformer" />	
	</flow>
	
</mule>
